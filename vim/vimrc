" for bundle, various plugins
    set nocompatible       " be iMproved
    filetype off           " required!

    let g:HasVundle = !empty(glob(expand("~") . "/.vim/bundle/vundle/*"))
    if g:HasVundle
        set runtimepath+=~/.vim/bundle/vundle
        call vundle#begin()

        Plugin 'LanguageTool'
        Plugin 'dahu/vim-fanfingtastic'
        Plugin 'ervandew/supertab'
        Plugin 'gmarik/vundle'
        Plugin 'javacomplete'
        Plugin 'matze/vim-move'
        Plugin 'mcarton/vim-vertical-help'
        Plugin 'pbrisbin/vim-mkdir'
        Plugin 'rust-lang/rust.vim'
        Plugin 'scrooloose/syntastic'
        Plugin 'terryma/vim-expand-region'
        Plugin 'tpope/vim-commentary'
        Plugin 'tpope/vim-endwise'
        Plugin 'tpope/vim-eunuch'
        Plugin 'tpope/vim-liquid'
        Plugin 'tpope/vim-repeat'
        Plugin 'tpope/vim-sensible'
        Plugin 'tpope/vim-surround'
        Plugin 'yegappan/mru'

        if has("python")
            Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
            Plugin 'SirVer/ultisnips'
            Plugin 'Valloric/YouCompleteMe'
        endif

        call vundle#end()
    end

let g:move_key_modifier = 'C'

" Set <leader> key to a more azerty-friendly key (must appear before any
" mapping using it)
    let mapleader = ","

" For syntastic
    " deactivate lacheck as it is most often annoying, usually redundant with
    " chktex and has no per-check deactivation option
    let g:syntastic_tex_checkers = ['chktek']

" terryma/vim-expand-region default mapping for shrink is _
    map - <Plug>(expand_region_shrink)

" for ultisnips
    " If you want :UltiSnipsEdit to split your window.
    let g:UltiSnipsEditSplit="horizontal"

    " For ultisnips & ycm compatibility
    let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
    let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
    let g:SuperTabDefaultCompletionType = '<C-n>'

" for C++
    let g:ycm_global_ycm_extra_conf = '~/.vim/bundle/YouCompleteMe/cpp/ycm_extra_conf.py'
    let g:syntastic_cpp_compiler_options='-std=c++1y'
    let g:ycm_complete_in_comments=1
    let g:ycm_confirm_extra_conf=0
    set matchpairs+=<:>

    set path+=include,/usr/include/c++/*

" for java
    autocmd Filetype java setlocal omnifunc=javacomplete#Complete
    set suffixes+=.class

    let g:syntastic_java_javac_config_file_enabled=1

" change default filetypes
    autocmd BufNewFile,BufRead *.tpp,/usr/include/c++/* set filetype=cpp
    autocmd BufNewFile,BufRead *.egg set filetype=egg
    autocmd BufNewFile,BufRead *.ll set filetype=llvm
    autocmd BufRead /tmp/evo* set filetype=mail
    autocmd BufNewFile,BufRead *.tex set filetype=tex " default is plaintex
    autocmd BufNewFile,BufRead *.mlw,*.why set filetype=why3

" filetype specific configuration
    autocmd FileType css,htlm set sw=2
    autocmd FileType gitcommit set spell textwidth=72 nofoldenable colorcolumn=51,73
    autocmd FileType liquid,mkd set spell textwidth=80
    autocmd FileType mail set spell colorcolumn=72
    autocmd FileType tex set spell suffixes+=*.aux,*.pdf,*.fdb_latexmk,*.fls,*.log,*.out,*.toc sw=2

" Flag problematic whitespace (trailing spaces, spaces before tabs).
highlight BadWhitespace term=standout ctermbg=red guibg=red
match BadWhitespace /\s\+$\| \+\t/

" Don't exit visual mode when shifting.
vnoremap < <gv
vnoremap > >gv

" Move up and down by visual lines not buffer lines.
nnoremap <Up>   gk
vnoremap <Up>   gk
nnoremap <Down> gj
vnoremap <Down> gj

" toggle line numbers
nnoremap <silent><Leader>n :set relativenumber!<CR>

" toggle spell lang
function! ToggleSpell()
    if &spell == 0
        set spell
        set spelllang=en
        echo 'spelllang=en'
    elseif &spelllang =~# 'en'
        set spell
        set spelllang=fr
        echo 'spelllang=fr'
    elseif &spelllang =~# 'fr'
        set nospell
        echo 'nospell'
    endif
endfunction

noremap <leader>z <ESC>:call ToggleSpell()<CR>

" other stuffs
    filetype plugin indent on
    set cpoptions+="#"
    set expandtab
    set foldmethod=marker
    set gdefault                    " makes :s///g default
    set guioptions-=lLrRT
    set list
    set listchars=nbsp:¬,tab:→ 
    set mouse=a
    set number
    set shiftwidth=4
    set showcmd                     " show partial commands
    syntax on

    " set split bar to be contiguous (there is an unbreakable space at the end
    " of that line — vim does not like classic space here)
    set fillchars=vert: 

    " color at 80th column
    set colorcolumn=81,91,101
    highlight ColorColumn ctermbg=lightgrey

    " close quick fix list on selection
    autocmd FileType qf nmap <buffer> <cr> <cr>:ccl<cr>

    nnoremap <leader>g <c-]>
    nnoremap <leader>m :!make<cr>
    nnoremap <leader>w <c-w>

